#中介者模式优点
灵活性高，因为将同事类进行了解耦，使其不必有关联性；
降低了类的复杂度，将一对多转化成了一对一；
#中介者模式缺点：
中介者使用过多，会使系统变得复杂难以维护；
#使用场景：
通过一个中间类来封装多个类中的行为，而又不想生成太多的子类。
#注意事项：
若不明确各个类的职责，那么就不要进行使用！
#和外观模式、代理模式比较
中介者模式和外观模式、代理模式比较类似，但是又有不同。
和外观模式比较，中介者模式中，同事类必须依赖与中介者，中介者也知道同事类；但是外观模式中，子系统是不需要知道外观类的存在，并且子系统是可以脱离外观模式的。
和代理模式，代理模式的核心就是代理作用，主要还是对原先的类进行扩展或增加控制，比如进行权限控制；而中介者模式主要目的是为了减少对象之前的耦合，也就是同事类直接相互独立，互不影响。



#自己理解
就像自己要盖房子，找一个中介包工头就行了，包工头再去联系其它资源
