#问题一：抽象工厂与其它工厂的对比
优：统一约束
缺：改变约束的时候，全部工厂都要修改
#问题二：为什么要用工厂模式
1、首先，工厂模式是为了解耦：把对象的创建和使用的过程分开。就是Class A 想调用 Class B ，那么A只是调用B的方法，而至于B的实例化，就交给工厂类。
2、其次，工厂模式可以降低代码重复。如果创建对象B的过程都很复杂，需要一定的代码量，而且很多地方都要用到，那么就会有很多的重复代码。我们可以这些创建对象B的代码放到工厂里统一管理。既减少了重复代码，也方便以后对B的创建过程的修改维护。
3、另外，因为工厂管理了对象的创建逻辑，使用者并不需要知道具体的创建过程，只管使用即可，减少了使用者因为创建逻辑导致的错误。
#工厂模式适用的一些场景（不仅限于以下场景）：
1. 对象的创建过程/实例化准备工作很复杂，需要初始化很多参数、查询数据库等。
2.类本身有好多子类，这些类的创建过程在业务中容易发生改变，或者对类的调用容易发生改变。
